<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>raytracer</groupId>
	<artifactId>RayTracer</artifactId>
	<version>1.0.1-SNAPSHOT</version>
	<name>RayTracer</name>
	<url>http://maven.apache.org</url>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		
		<mainClass>raytracer.FatLauncher</mainClass>
		<moduleName>raytracer</moduleName>
		
    	<javafx.version>17.0.1</javafx.version>
    	<javafx.maven.plugin.version>0.0.8</javafx.maven.plugin.version>
	</properties>
	

	<dependencies>
		<!-- javafx dependecies -->
		<dependency>
    		<groupId>org.openjfx</groupId>
    		<artifactId>javafx-controls</artifactId>
  		  <version>${javafx.version}</version>
		</dependency>
		
		<dependency>
    		<groupId>org.openjfx</groupId>
    		<artifactId>javafx-swing</artifactId>
  		  <version>${javafx.version}</version>
		</dependency>

		<dependency>
    		<groupId>org.openjfx</groupId>
    		<artifactId>javafx-fxml</artifactId>
  		  <version>${javafx.version}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.jfxtras/jmetro -->
		<!--  <dependency>
		    <groupId>org.jfxtras</groupId>
		    <artifactId>jmetro</artifactId>
		    <version>11.6.14</version>
		</dependency> -->
	</dependencies>

	<build>
		<plugins>
            <plugin>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${mainClass}</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
			
			<plugin>
               	<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            
            <plugin>
			    <groupId>org.moditect</groupId>
			    <artifactId>moditect-maven-plugin</artifactId>
			</plugin>
		</plugins>
		
		<pluginManagement>
		    <plugins>
		        <plugin>
		            <groupId>org.apache.maven.plugins</groupId>
		            <artifactId>maven-compiler-plugin</artifactId>
		            <version>3.8.1</version>
		            <configuration>
		                <source>${maven.compiler.source}</source>
		                <target>${maven.compiler.target}</target>
		            </configuration>
		        </plugin>

				<plugin>
      				<groupId>org.openjfx</groupId>
      				<artifactId>javafx-maven-plugin</artifactId>
     				<version>${javafx.maven.plugin.version}</version>
	       			<configuration>
	         				<mainClass>${mainClass}</mainClass>
	         				<launcher>launcher</launcher>
	         				<jlinkImageName>raytracer</jlinkImageName>
	         				<jmodsPath>target/modules</jmodsPath> <!-- We're going to use the modules folder as an additional module path for the maven javafx
	         				plugin as the JBibTex containing the generated module info file is located in target/modules. -->
	       			</configuration>
	   			</plugin>
				
				<plugin>
				    <groupId>org.moditect</groupId>
				    <artifactId>moditect-maven-plugin</artifactId>
				    <version>1.0.0.RC2</version>
				    <executions>
				    	<execution> <!-- Generates the module-info file for JBibTex because JBibTex isn't modular by default 
				    	The generated module-info file is then added to JBibTex's .jar and the resulting .jar is placed in target/modules -->
				            <id>add-module-infos</id>
				            <phase>generate-resources</phase>
				            <goals>
				                <goal>add-module-info</goal>
				            </goals>
				            <configuration>
				            	<overwriteExistingFiles>true</overwriteExistingFiles>
				                <outputDirectory>${project.build.directory}/modules</outputDirectory>
				                <modules>
				                    <module>
				                        <artifact>
				                            <groupId>org.jbibtex</groupId>
				                            <artifactId>jbibtex</artifactId>
				                            <version>1.0.17</version>
				                        </artifact>
				                        <moduleInfoSource>
				                            module jbibtex 
				                            {
				                                exports org.jbibtex;
				                            }
				                        </moduleInfoSource>
				                    </module>
				                </modules>
				            </configuration>
				        </execution>
				    </executions>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.moditect</groupId>
										<artifactId>
											moditect-maven-plugin
										</artifactId>
										<versionRange>
											[1.0.0.RC2,)
										</versionRange>
										<goals>
											<goal>add-module-info</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
		    </plugins>
		</pluginManagement>
  	</build>


</project>
